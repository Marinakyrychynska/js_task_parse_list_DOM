{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,E,I,A,W,M,A,U,wI,G,CCEA,SAAS,EAAgB,CAAM,EAG7B,OAFe,WAAW,EAAO,OAAO,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,IAGpE,CAEA,IAAM,EAAW,SAAS,aAAa,CAAC,OAuBxC,AArBA,SAAkB,CAAI,EACnB,EAAG,EAAK,gBAAgB,CAAC,OACvB,IAAI,CAAC,SAAC,CAAA,CAAG,CADX,EAEG,IAAM,EAAW,EAAgB,EAAE,OAAO,CAAC,MAAM,EAGjD,OAAO,AAFU,EAAgB,EAAE,OAAO,CAAC,MAAM,EAE/B,CACpB,GACC,OAAO,CAAC,SAAA,CADT,EACe,OAAA,EAAK,WAAW,CAAC,E,EACpC,EAYS,GACT,AAXA,SAAqB,CAAI,EACtB,EAAG,EAAK,gBAAgB,CAAC,OACvB,GAAG,CAAC,SAAA,CADN,EACe,MAAA,CACZ,KAAM,EAAK,SAAS,CACpB,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAK,OAAO,CAAC,MAAM,CAC3B,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,C,EACJ,EAGY,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction convertToNumber(salary) {\n    var number = parseFloat(salary.replace(\"$\", \"\").replaceAll(\",\", \"\"));\n    return number;\n}\nvar mainList = document.querySelector(\"ul\");\nfunction sortList(list) {\n    _to_consumable_array(list.querySelectorAll(\"li\")).sort(function(a, b) {\n        var convertA = convertToNumber(a.dataset.salary);\n        var convertB = convertToNumber(b.dataset.salary);\n        return convertB - convertA;\n    }).forEach(function(li) {\n        return list.appendChild(li);\n    });\n}\nfunction getEmploees(list) {\n    _to_consumable_array(list.querySelectorAll(\"li\")).map(function(item) {\n        return {\n            name: item.innerText,\n            position: item.dataset.position,\n            salary: item.dataset.salary,\n            age: item.dataset.age\n        };\n    });\n}\nsortList(mainList);\ngetEmploees(mainList);\n\n//# sourceMappingURL=index.b57ec2c3.js.map\n","'use strict';\n\nfunction convertToNumber(salary) {\n  const number = parseFloat(salary.replace('$', '').replaceAll(',', ''));\n\n  return number;\n}\n\nconst mainList = document.querySelector('ul');\n\nfunction sortList(list) {\n  [...list.querySelectorAll('li')]\n    .sort((a, b) => {\n      const convertA = convertToNumber(a.dataset.salary);\n      const convertB = convertToNumber(b.dataset.salary);\n\n      return convertB - convertA;\n    })\n    .forEach(li => list.appendChild(li));\n}\n\nfunction getEmploees(list) {\n  [...list.querySelectorAll('li')]\n    .map(item => ({\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    }));\n}\n\nsortList(mainList);\ngetEmploees(mainList);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","convertToNumber","salary","parseFloat","replace","replaceAll","mainList","document","querySelector","sortList","list","querySelectorAll","sort","a","b","convertA","dataset","convertB","forEach","li","appendChild","getEmploees","map","item","innerText","position","age"],"version":3,"file":"index.b57ec2c3.js.map"}